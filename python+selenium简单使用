最近系统测试是需要通过web网页进行一系列的重复操作，想着节约时间成本，终于是看了下selenium如何使用的，基本算是应用到了。
不过现在的问题是想使用headless，不要打开浏览器测试。但只要加上headless就会有一个元素超时。如果机器性能超好，现在直接web网页打开测试基本无问题。
学习代码如下：
# coding=utf-8

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
import selenium.webdriver.support.ui as ui
import time


option = webdriver.ChromeOptions()
#尝试添加无浏览器失败
#option.add_argument('headless')
#browser = webdriver.Chrome(chrome_options=option)

browser = webdriver.Chrome()
#browser.implicitly_wait(30)    等待，每个网页加载完，继续执行；执行时间限制为30s
wait = ui.WebDriverWait(browser, 10)   #检测是否能找到需要定位的元素
browser.get('http://df.sys.srv')


browser.maximize_window()

browser.find_element_by_id("miniLogin_username").clear()
browser.find_element_by_id("miniLogin_username").send_keys('zhaoyi3')

browser.find_element_by_id("miniLogin_pwd").clear()
browser.find_element_by_id("miniLogin_pwd").send_keys('zhaoyi3')

browser.find_element_by_id("message_LOGIN_IMMEDIATELY").send_keys(Keys.ENTER)

wait.until(lambda driver: driver.find_element_by_class_name("fa-edit"))
browser.find_element_by_class_name("fa-edit").click()

wait.until(lambda driver: driver.find_element_by_xpath("//tr[@class='odd']/td[7]"))
browser.find_element_by_xpath("//tr[@class='odd']/td[7]").click()
#time.sleep(3)

wait.until(lambda driver: driver.find_element_by_id("sys_approved_btn"))
browser.find_element_by_id("sys_approved_btn").click()
time.sleep(3)

try:
    browser.refresh()
    print("refresh ok")
except Exception as e:
    print("refresh failed")
for i in range(1, 100):
    wait.until(lambda driver: driver.find_element_by_class_name("fa-edit"))
    browser.find_element_by_class_name("fa-edit").click()

    wait.until(lambda driver: driver.find_element_by_xpath("//tr[@class='odd']/td[7]"))
    browser.find_element_by_xpath("//tr[@class='odd']/td[7]").click()

    #wait.until(lambda driver: driver.find_element_by_id("sys_approved_btn"))
    browser.find_element_by_id("sys_approved_btn").click()
    time.sleep(3)
    try:
        browser.refresh()
        print("refresh ok")
    except Exception as e:
        print("refresh failed")

无浏览器模式测试还在继续探查中
